{"version":3,"file":"fsm-shell-client.es.js","sources":["../src/ShellEvents.ts","../src/ShellVersionInfo.ts","../src/MessageLogger.ts","../src/Debugger.ts","../src/ShellSdk.ts"],"sourcesContent":["export type EventType =\n  | 'V1.REQUIRE_CONTEXT'\n  | 'V1.REQUIRE_AUTHENTICATION'\n  | 'V1.CLOSE'\n  | 'V1.REQUIRE_PERMISSIONS'\n  | 'V1.GET_PERMISSIONS'\n  | 'V2.GET_PERMISSIONS'\n  | 'V1.GET_SETTINGS'\n  | 'V1.GET_STORAGE_ITEM'\n  | 'V2.GET_STORAGE_ITEM'\n  | 'V1.SET_STORAGE_ITEM'\n  | 'V1.SET_VIEW_STATE'\n  | 'V1.SET_TITLE'\n  | 'V1.RESTORE_TITLE'\n  | 'V1.TO_APP'\n  | 'V1.LOADING_SUCCESS'\n  | 'V1.GET_FEATURE_FLAG'\n  | 'V1.PRIVATE.GET_ACCOUNT_SETTINGS'\n  | 'V1.OUTLET.ADD_PLUGIN'\n  | 'V1.OUTLET.REMOVE_PLUGIN'\n  | 'V1.OUTLET.REQUEST_CONTEXT'\n  | 'V1.OUTLET.LOADING_SUCCESS'\n  | 'V1.OUTLET.LOADING_FAIL'\n  | string;\n\nexport const SHELL_EVENTS = {\n  Version1: {\n    REQUIRE_CONTEXT: 'V1.REQUIRE_CONTEXT',\n    REQUIRE_AUTHENTICATION: 'V1.REQUIRE_AUTHENTICATION',\n    CLOSE: 'V1.CLOSE',\n    REQUIRE_PERMISSIONS: 'V1.REQUIRE_PERMISSIONS',\n    GET_PERMISSIONS: 'V1.GET_PERMISSIONS',\n    GET_SETTINGS: 'V1.GET_SETTINGS',\n    GET_STORAGE_ITEM: 'V1.GET_STORAGE_ITEM',\n    SET_STORAGE_ITEM: 'V1.SET_STORAGE_ITEM',\n    SET_VIEW_STATE: 'V1.SET_VIEW_STATE',\n    SET_TITLE: 'V1.SET_TITLE',\n    RESTORE_TITLE: 'V1.RESTORE_TITLE',\n    TO_APP: 'V1.TO_APP',\n    GET_FEATURE_FLAG: 'V1.GET_FEATURE_FLAG',\n    PRIVATE: {\n      GET_ACCOUNT_SETTINGS: 'V1.PRIVATE.GET_ACCOUNT_SETTINGS',\n    },\n    OUTLET: {\n      ADD_PLUGIN: 'V1.OUTLET.ADD_PLUGIN',\n      REMOVE_PLUGIN: 'V1.OUTLET.REMOVE_PLUGIN',\n      REQUEST_CONTEXT: 'V1.OUTLET.REQUEST_CONTEXT',\n      LOADING_SUCCESS: 'V1.OUTLET.LOADING_SUCCESS',\n      LOADING_FAIL: 'V1.OUTLET.LOADING_FAIL',\n    },\n  },\n  Version2: {\n    GET_STORAGE_ITEM: 'V2.GET_STORAGE_ITEM',\n    GET_PERMISSIONS: 'V2.GET_PERMISSIONS',\n  },\n  ERROR: 'ERROR',\n};\n\nexport enum ErrorType {\n  OUTLET_TIMEOUT = 'OUTLET_TIMEOUT',\n  OUTLET_MAXIMUM_DEPTH = 'OUTLET_MAXIMUM_DEPTH',\n  OUTLET_HTTPS_ERROR = 'OUTLET_HTTPS_ERROR',\n}\n\nconst getKeyValues = (source: any, initial: string[] = []): string[] => {\n  let result = [...initial];\n  for (const key in source) {\n    if (typeof source[key] === 'string') {\n      result.push(source[key]);\n    } else if (typeof source[key] === 'object') {\n      result = getKeyValues(source[key], result);\n    }\n  }\n  return result;\n};\n\nexport const ALL_SHELL_EVENTS_ARRAY: string[] = getKeyValues(SHELL_EVENTS);\n","// THE FILE SHELLVERSIONINFO.TS IS AUTOMATICALLY GENERATED DURING BUILD PROCESS\r\n// MANUAL CHANGES TO THIS FILE WILL BE OVERWRITTEN !!!\r\n\r\nexport const SHELL_VERSION_INFO = {\r\nVERSION : '1.12.1',\r\nBUILD_TS: '2021-08-12T13:10:45.094Z'\r\n};\r\n\r\n","\nimport { DebugEvent, EventDirection } from './models/debug/debug-event';\nimport { EventType } from './ShellEvents';\n\ninterface FilterOptions {\n  type?: EventType[] | EventType,\n  direction?: EventDirection,\n  component: string | string[],\n  handled: boolean,\n  from: Date,\n  to: Date\n}\n\nexport class MessageLogger {\n\n  public messages: DebugEvent<any>[] = [];\n\n  public push(event: DebugEvent<any>, debugId: string) {\n    let action: string;\n    if (event.direction === 'incoming') {\n      if (event.handled === 'yes') {\n        action = 'received and handled';\n      } else {\n        action = 'received and skipped';\n      }\n    } else {\n      action = 'sending';\n    }\n    console.log(`${debugId} ${action} message: `, event);\n    this.messages.push(event);\n  }\n\n  public all() {\n    return this.messages;\n  }\n\n  public allTable() {\n    console.table(this.all());\n  }\n\n  public filter(options: FilterOptions) {\n    return this.messages.filter(message => {\n\n      if (options.type) {\n        if (Array.isArray(options.type) && !options.type.some(type => new RegExp(type).test(message.type))) {\n          return false;\n        } else if (typeof options.type === 'string' && !RegExp(options.type as string).test(message.type)) {\n          return false;\n        }\n      }\n\n      if (options.component) {\n        if (Array.isArray(options.component) && !options.component.some(it => it === message.component)) {\n          return false;\n        } else if (options.component !== message.component) {\n          return false;\n        }\n      }\n\n      if (options.direction && options.direction !== message.direction) {\n        return false;\n      }\n\n      if (\n        options.direction &&\n        options.direction === 'incoming' &&\n        typeof options.handled !== 'undefined' &&\n        options.handled !== (message.handled === 'yes')\n      ) {\n        return false;\n      }\n\n      if (options.from && options.from > message.timestamp) {\n        return false;\n      }\n\n      if (options.to && options.to < message.timestamp) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  public filterTable(options: FilterOptions) {\n    console.table(this.filter(options));\n  }\n\n}\n","\nimport { EventType, ALL_SHELL_EVENTS_ARRAY } from './ShellEvents';\nimport { EventDirection, DebugEvent } from './models/debug/debug-event';\nimport { MessageLogger } from './MessageLogger';\n\ninterface DebuggableWindow extends Window {\n  fsmShellMessageLogger: MessageLogger | undefined;\n}\n\ninterface Routing {\n  to?: string[];\n  from?: string[];\n}\n\nconst FSM_SHELL_DEBUG_KEY = 'cs.fsm-shell.debug';\n\nexport class Debugger {\n\n  private debugMode: boolean = false;\n\n  constructor(\n    private winRef: Window,\n    private debugId: string\n  ) {\n    if (this.debugId) {\n      const win = this.winRef as DebuggableWindow;\n      const localStorageValue = win.localStorage.getItem(FSM_SHELL_DEBUG_KEY);\n      if (!!localStorageValue && localStorageValue.split(',').some(it => it === debugId)) {\n        this.debugMode = true;\n      }\n    }\n  }\n\n  public traceEvent(direction: EventDirection, type: EventType, payload: any, routing: Routing, hasHandler: boolean) {\n    if (this.debugMode && ALL_SHELL_EVENTS_ARRAY.some(it => it === type)) {\n      const debugEvent: DebugEvent<any> = {\n        timestamp: new Date(),\n        component: this.debugId,\n        direction,\n        type,\n        handled: direction === 'incoming' ? (hasHandler ? 'yes' : 'no') : 'n/a',\n        to: routing.to,\n        from: routing.from,\n        payload\n      }\n      this.logEvent(debugEvent);\n    }\n  }\n\n  private logEvent(debugEvent: DebugEvent<any>) {\n    const win = this.winRef as DebuggableWindow;\n    if (!win.fsmShellMessageLogger) {\n      win.fsmShellMessageLogger = new MessageLogger();\n    }\n    win.fsmShellMessageLogger.push(debugEvent, this.debugId);\n  }\n\n}\n","import { EventType, ErrorType, SHELL_EVENTS } from './ShellEvents';\nimport { SHELL_VERSION_INFO } from './ShellVersionInfo';\nimport { Debugger } from './Debugger';\nimport { Outlet } from './models/outlets/outlet.model';\n\n// tslint:disable\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n// tslint:enable\n\nconst DEFAULT_MAXIMUM_DEPTH = 1;\n\nexport class ShellSdk {\n  public static VERSION = SHELL_VERSION_INFO.VERSION;\n  public static BUILD_TS = SHELL_VERSION_INFO.BUILD_TS;\n\n  private static _instance: ShellSdk;\n  private isRoot: boolean; // Is root if on `init`, target value is null.\n\n  private postMessageHandler:\n    | (<T>(type: EventType, value: T, to?: string[]) => void)\n    | undefined;\n\n  // tslint:disable-next-line\n  private subscribersMap: Map<EventType, Function[]>;\n  // tslint:disable-next-line\n  private subscribersViewStateMap: Map<string, Function[]>;\n\n  private debugger: Debugger;\n  private outletsMap: Map<HTMLIFrameElement, Outlet>;\n\n  private allowedOrigins: string[] = [];\n  private ignoredOrigins: string[] = [];\n\n  private constructor(\n    private target: Window,\n    private origin: string,\n    private winRef: Window,\n    debugId: string,\n    private outletMaximumDepth: number\n  ) {\n    this.subscribersMap = new Map();\n    this.subscribersViewStateMap = new Map();\n    this.outletsMap = new Map();\n    this.initMessageApi();\n    this.debugger = new Debugger(winRef, debugId);\n    this.isRoot = target == null;\n  }\n\n  public static init(\n    target: Window,\n    origin: string,\n    winRef: Window = window,\n    debugId: string = '',\n    outletMaximumDepth: number = DEFAULT_MAXIMUM_DEPTH\n  ): ShellSdk {\n    ShellSdk._instance = new ShellSdk(\n      target,\n      origin,\n      winRef,\n      debugId,\n      outletMaximumDepth\n    );\n    return ShellSdk._instance;\n  }\n\n  public static get instance(): ShellSdk {\n    if (!ShellSdk._instance) {\n      throw new Error(\"ShellSdk wasn't initialized.\");\n    }\n    return ShellSdk._instance;\n  }\n\n  public static isInsideShell(): boolean {\n    // using local variable for window reference below needed to fix issue when running tests\n    // for applications which use fsm-shell in cypress\n    // cypress may replace `window.self !== window.top` with `window.self !== window.self`\n    // what makes isInsideShell method returning wrong value\n\n    const winRef = window;\n    return winRef.self !== winRef.top;\n  }\n\n  public setAllowedOrigins(allowedOrigins: string[] | '*' = []) {\n    this.allowedOrigins = allowedOrigins === '*' ? [] : allowedOrigins;\n  }\n\n  public addAllowedOrigin(url: string) {\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch {\n      return;\n    }\n    this.allowedOrigins.push(urlObj.origin);\n  }\n\n  public removeAllowedOrigin(url: string) {\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch {\n      return;\n    }\n    const idxToRemove = this.allowedOrigins.findIndex(\n      (allowedOrigin) => allowedOrigin === urlObj.origin\n    );\n    this.allowedOrigins = this.allowedOrigins.filter(\n      (_allowedOrigin, originIdx) => originIdx !== idxToRemove\n    );\n  }\n\n  public isOriginAllowed(url: string): boolean {\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch {\n      return false;\n    }\n    return this.allowedOrigins.some(\n      (allowedOrigin) => allowedOrigin === urlObj.origin\n    );\n  }\n\n  public setIgnoredOrigins(ignoredOrigins: string[] = []) {\n    this.ignoredOrigins = ignoredOrigins;\n  }\n\n  public addIgnoredOrigin(url: string) {\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch {\n      return;\n    }\n    this.ignoredOrigins.push(urlObj.origin);\n  }\n\n  public removeIgnoredOrigin(url: string) {\n    let urlObj: URL;\n    try {\n      urlObj = new URL(url);\n    } catch {\n      return;\n    }\n    const idxToRemove = this.ignoredOrigins.findIndex(\n      (ignoredOrigins) => ignoredOrigins === urlObj.origin\n    );\n    this.ignoredOrigins = this.ignoredOrigins.filter(\n      (_ignoredOrigins, originIdx) => originIdx !== idxToRemove\n    );\n  }\n\n  // Called by outlet component to assign an generated uuid to an iframe. This is key\n  // to allow one to one communication between a pluging and shell-host\n  public registerOutlet(frame: HTMLIFrameElement, _name: string | undefined) {\n    this.outletsMap.set(frame, {\n      uuid: uuidv4(),\n      name: _name,\n    });\n  }\n\n  public unregisterOutlet(frame: HTMLIFrameElement) {\n    this.outletsMap.delete(frame);\n  }\n\n  public getTarget() {\n    return this.target;\n  }\n\n  public setTarget(target: Window, origin: string) {\n    const targetChanged = this.target !== target || this.origin !== origin;\n    if (targetChanged) {\n      this.target = target;\n      this.origin = origin;\n    }\n  }\n\n  // tslint:disable-next-line\n  public on = (type: EventType, subscriber: Function): Function => {\n    if (!this.subscribersMap.has(type)) {\n      this.subscribersMap.set(type, []);\n    }\n    // tslint:disable-next-line\n    const subscribers = this.subscribersMap.get(type) as Function[];\n    subscribers.push(subscriber);\n    return () => {\n      this.removeSubscriber(type, subscriber);\n    };\n  };\n\n  // tslint:disable-next-line\n  public onViewState = (key: string, subscriber: Function): Function => {\n    if (!this.subscribersViewStateMap.has(key)) {\n      this.subscribersViewStateMap.set(key, []);\n    }\n    // tslint:disable-next-line\n    const subscribers = this.subscribersViewStateMap.get(key) as Function[];\n    subscribers.push(subscriber);\n    return () => {\n      this.removeViewStateSubscriber(key, subscriber);\n    };\n  };\n\n  // tslint:disable-next-line\n  public off = (type: EventType, subscriber: Function): void => {\n    this.removeSubscriber(type, subscriber);\n  };\n\n  // tslint:disable-next-line\n  public offViewState = (key: string, subscriber: Function): void => {\n    this.removeViewStateSubscriber(key, subscriber);\n  };\n\n  public emit<T>(type: EventType, value: T, to?: string[]) {\n    if (!this.postMessageHandler) {\n      throw new Error(\"ShellSdk wasn't initialized, message handler not set.\");\n    }\n    // Only root can send a message to a specific node\n    this.postMessageHandler(type, value, this.isRoot ? to : undefined);\n  }\n\n  public setViewState(key: string, value: any) {\n    if (!this.postMessageHandler) {\n      throw new Error(\"ShellSdk wasn't initialized, message handler not set.\");\n    }\n    this.postMessageHandler(SHELL_EVENTS.Version1.SET_VIEW_STATE, {\n      key,\n      value,\n    });\n  }\n\n  // tslint:disable-next-line\n  private removeSubscriber(type: EventType, subscriber: Function) {\n    const subscribers = this.subscribersMap.get(type);\n    if (!!subscribers) {\n      this.subscribersMap.set(\n        type,\n        subscribers.filter((it) => it !== subscriber)\n      );\n    }\n  }\n\n  // tslint:disable-next-line\n  private removeViewStateSubscriber(type: string, subscriber: Function) {\n    const subscribers = this.subscribersViewStateMap.get(type);\n    if (!!subscribers) {\n      this.subscribersViewStateMap.set(\n        type,\n        subscribers.filter((it) => it !== subscriber)\n      );\n    }\n  }\n\n  private initMessageApi() {\n    this.postMessageHandler = <T>(type: EventType, value: T, to?: string[]) => {\n      if (!this.target) {\n        throw new Error(\"ShellSdk wasn't initialized, target is missing.\");\n      }\n      if (!this.origin) {\n        throw new Error(\"ShellSdk wasn't initialized, origin is missing.\");\n      }\n\n      this.debugger.traceEvent('outgoing', type, value, { to }, true);\n      this.target.postMessage({ type, value, to }, this.origin);\n    };\n    this.winRef.addEventListener('message', this.onMessage);\n  }\n\n  /*\n    Message handler, generic for all ShellSDK instances but have different behaviours if root of not.\n\n    - If root, we handle all messages to subscribers\n    - If not root, and receive a message from an iframe registered as outlet, we send to parent node\n    and add node's id to allow return if needed.\n    - If not root and receive SET_VIEW_STATE, we set new value on local node and propagate to outlets\n    - If not root and receive TO_APP, we handle locally and do not propagate to outlets\n    - If not root and receive any message with `to` value, we remove our id and send to destination\n\n    Also define a new event for REQUIRE_CONTEXT which now contains ViewState. To use ViewState binding\n    and avoid duplicate key we first provide REQUIRE_CONTEXT to init currrent node, then propagate each\n    key of ViewState individualy to match potential subscriptions. To avoid UI glitch after this we\n    send an empty REQUIRE_CONTEXT_DONE to eventually adjust UI if needed.\n  */\n  private onMessage = (event: MessageEvent) => {\n    if (!event.data || typeof event.data.type !== 'string') {\n      return;\n    }\n\n    if (\n      event.source !== window.parent &&\n      this.ignoredOrigins &&\n      Array.isArray(this.ignoredOrigins) &&\n      this.ignoredOrigins.length !== 0 &&\n      this.ignoredOrigins.indexOf(event.origin) !== -1\n    ) {\n      return;\n    }\n\n    if (\n      event.source !== window.parent &&\n      this.allowedOrigins &&\n      Array.isArray(this.allowedOrigins) &&\n      this.allowedOrigins.length !== 0 &&\n      this.allowedOrigins.indexOf(event.origin) === -1\n    ) {\n      console.error(`${event.origin} is not in the list of known origins`);\n      return;\n    }\n\n    const payload = event.data as {\n      type: EventType;\n      value: any;\n      from?: string[];\n      to?: string[];\n    };\n\n    // we ignore LOADING SUCCESS as it is handled by the outlet component itself\n    if (payload.type === SHELL_EVENTS.Version1.OUTLET.LOADING_SUCCESS) {\n      return;\n    }\n\n    // If current instance is not root, we act as middleman node to propagate\n    if (!this.isRoot) {\n      // Message come from a registered outlet, we send to parent (this.target) with a `from` value\n      const source: Window = event.source as Window;\n\n      if (source) {\n        // If has a source, we look if it come from one of our HTMLIFrameElement\n        const iFrameElement = Array.from(this.outletsMap.keys()).find(\n          (frame) => frame.contentWindow === source\n        );\n        if (iFrameElement && iFrameElement.src) {\n          const iFrameOrigin = new URL(iFrameElement.src).origin;\n          if (iFrameOrigin !== event.origin) {\n            // If it comes from unregistered iFrame we ignore it\n            // in order to prevent unauthorized access to the data\n            this.debugger.traceEvent(\n              'blocked',\n              payload.type,\n              payload.value,\n              { from: payload.from },\n              false\n            );\n            return;\n          }\n\n          // If it come from an outlet\n          if (payload.type === SHELL_EVENTS.Version1.SET_VIEW_STATE) {\n            console.warn(\n              '[ShellSDk] A plugin tried to update viewState using SetViewState which is not allowed for security reason.'\n            );\n            return;\n          }\n          let from = payload.from || [];\n          // If we receive from outlet request_context to fetch plugin from target, we return LOADING_FAIL\n          // if too many depth exchanges\n          if (\n            payload.type === SHELL_EVENTS.Version1.OUTLET.REQUEST_CONTEXT &&\n            from.length >= this.outletMaximumDepth\n          ) {\n            source.postMessage(\n              {\n                type: SHELL_EVENTS.Version1.OUTLET.LOADING_FAIL,\n                value: {\n                  target: payload.value.target,\n                  error: ErrorType.OUTLET_MAXIMUM_DEPTH,\n                },\n                to: from,\n              },\n              this.origin\n            );\n          } else {\n            const outlet = this.outletsMap.get(iFrameElement);\n            if (outlet && outlet.uuid) {\n              if (\n                payload.type === SHELL_EVENTS.Version1.REQUIRE_CONTEXT &&\n                from.length === 0 &&\n                outlet.name !== undefined\n              ) {\n                payload.value.targetOutletName = outlet.name;\n              }\n              // this is the uuid outlet used for routing of source object\n              from = [...from, outlet.uuid];\n              this.debugger.traceEvent(\n                'outgoing',\n                payload.type,\n                payload.value,\n                { from },\n                true\n              );\n              this.target.postMessage(\n                { type: payload.type, value: payload.value, from },\n                this.origin\n              );\n            }\n          }\n          return;\n        } else if (source !== this.target) {\n          // ShellSdk now ignore messages from outlets if it has no outlet registered\n          return;\n        }\n      }\n\n      // Propagate SET_VIEW_STATE to childrens's outlet andset value to current subscribers\n      if (payload.type === SHELL_EVENTS.Version1.SET_VIEW_STATE) {\n        this.outletsMap.forEach((value, key) => {\n          if (key.contentWindow) {\n            key.contentWindow.postMessage(\n              { type: payload.type, value: payload.value },\n              this.origin\n            );\n          }\n        });\n\n        const thisSubscribers = this.subscribersViewStateMap.get(\n          payload.value.key\n        );\n        this.debugger.traceEvent(\n          'incoming',\n          payload.type,\n          payload.value,\n          {},\n          !!thisSubscribers\n        );\n        if (!!thisSubscribers) {\n          for (const subscriber of thisSubscribers) {\n            subscriber(payload.value.value);\n          }\n        }\n        return;\n      }\n\n      // If ShellSdk receive OUTLET.REQUEST_CONTEXT with only `isConfigurationMode` we propagate to all outlets\n      if (\n        payload.type === SHELL_EVENTS.Version1.OUTLET.REQUEST_CONTEXT &&\n        payload.value.hasOwnProperty('isConfigurationMode') &&\n        !payload.value.hasOwnProperty('target') &&\n        !payload.value.hasOwnProperty('plugin')\n      ) {\n        this.outletsMap.forEach((value, key) => {\n          if (key.contentWindow) {\n            key.contentWindow.postMessage(\n              { type: payload.type, value: payload.value },\n              this.origin\n            );\n          }\n        });\n      }\n\n      // Message has a `to` value, send to an outlet as one to one communication\n      if (\n        payload.to &&\n        payload.to.length !== 0 &&\n        payload.type !== SHELL_EVENTS.Version1.TO_APP\n      ) {\n        this.debugger.traceEvent(\n          'outgoing',\n          payload.type,\n          payload.value,\n          { to: payload.to },\n          true\n        );\n        this.outletsMap.forEach((value, key) => {\n          if (\n            payload.to &&\n            payload.to.indexOf(value.uuid) !== -1 &&\n            key.contentWindow\n          ) {\n            key.contentWindow.postMessage(\n              {\n                type: payload.type,\n                value: payload.value,\n                to: payload.to.filter((id) => id !== value.uuid),\n              },\n              this.origin\n            );\n          }\n        });\n        return;\n      }\n    }\n\n    // If isRoot or message is for me, we send to subscribers/handlers\n    const subscribers = this.subscribersMap.get(payload.type);\n    this.debugger.traceEvent(\n      'incoming',\n      payload.type,\n      payload.value,\n      { from: payload.from },\n      !!subscribers\n    );\n\n    if (!!subscribers) {\n      for (const subscriber of subscribers) {\n        subscriber(\n          payload.value,\n          event.origin,\n          payload.type === SHELL_EVENTS.Version1.SET_VIEW_STATE\n            ? null\n            : payload.from\n        );\n      }\n    }\n\n    // On REQUIRE_CONTEXT, we split and propagate viewState\n    // Need to be done AFTER REQUIRE_CONTEXT event in case of plugin need auth or context.\n    if (\n      !this.isRoot &&\n      payload.type === SHELL_EVENTS.Version1.REQUIRE_CONTEXT\n    ) {\n      const context =\n        typeof payload.value === 'string'\n          ? JSON.parse(payload.value)\n          : payload.value;\n      const viewState = context.viewState;\n      if (viewState) {\n        for (const key of Object.keys(viewState)) {\n          const thisSubscribers = this.subscribersViewStateMap.get(`${key}`);\n          if (!!thisSubscribers) {\n            for (const subscriber of thisSubscribers) {\n              subscriber(viewState[key]);\n            }\n          }\n        }\n      }\n      this.target.postMessage(\n        { type: SHELL_EVENTS.Version1.OUTLET.LOADING_SUCCESS },\n        this.origin\n      );\n    }\n  };\n}\n"],"names":[],"mappings":"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"}